apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// 演示通过依赖项目使用插件，使用这个插件会导致apk中没有dex文件，以后修复吧，现在先不使用了
//apply plugin: 'abelhu.study'
// 进阶为tinkerPatch，全套解决方案，包含了tinker.gradle的所有内容，所以就不需要在再apply tinker.gradle了
//apply from: 'tinkerPatch.gradle'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId 'com.abelhu.androidstudy'
        minSdkVersion 23
        targetSdkVersion 30
        versionCode PROJ_VERSION_CODE.toInteger()
        versionName PROJ_VERSION
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 关闭自定义的Instrumentation和Looper检查
        buildConfigField "Boolean", "CustomInstrumentation", "false"
        buildConfigField "Boolean", "CustomLooper", "false"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "Host", "\"https://www.baidu.com/\"")
            renderscriptDebuggable = true
            multiDexEnabled = true
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "Host", "\"https://www.qq.com/\"")
        }
    }
    sourceSets {
        main {
            // 为了方便移植，把java文件和aidl文件放在一起，但是由于gradle可能找不到位于aidl目录下的java文件，所以这边直接把设置java的查找路径也包含aidl目录
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }
    lintOptions {
        // 静态检查有无法使用的包，暂时不管他
        disable 'InvalidPackage'
    }
    aaptOptions {
        // 关闭png的优化，保证热更新
        cruncherEnabled false
    }
    dexOptions {
        jumboMode = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    flavorDimensions "market"
//    // 多渠道打包
//    productFlavors {
//        tencent { dimension "market" }
////        mi { dimension "market" }
//    }
}

dependencies {
    // libs
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // androidx
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-runtime:2.3.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    // google
    implementation 'com.google.android.material:material:1.2.1'
    // dagger Dependency Injection : https://github.com/google/dagger
    implementation 'com.google.dagger:dagger:2.27'
    kapt 'com.google.dagger:dagger-compiler:2.27'
    implementation 'com.google.dagger:dagger-android:2.27'
    implementation 'com.google.dagger:dagger-android-support:2.27'
    kapt 'com.google.dagger:dagger-android-processor:2.27'
    // unit test
    testImplementation 'junit:junit:4.13'
    // android unit test
    testImplementation 'org.mockito:mockito-core:3.3.3'
    // UI testing with Espresso
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    // UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    // eventBus: https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'
    // tcp: https://github.com/TooTallNate/Java-WebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.5.1'
    // rxJava: https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.12'
    // cache video: https://github.com/danikula/AndroidVideoCache
    implementation 'com.danikula:videocache:2.7.1'
//    // using pager layout
//    implementation 'com.github.qicodes:pagerlayout:1.0.4'
    // utils
    implementation 'com.github.qicodes:utils:1.3.2'
    // permission
    implementation 'com.github.tbruyelle:rxpermissions:0.12'
    // customer annotation
    implementation project(":Annotation")
    kapt project(":AnnotationCode")
    // bytecode edit
    implementation 'org.javassist:javassist:3.27.0-GA'

    // jmh:
    testImplementation 'org.openjdk.jmh:jmh-core:1.23'
    kaptTest 'org.openjdk.jmh:jmh-generator-annprocess:1.23'

    implementation project(':download')
}

// tinker， 因为依赖project.android.defaultConfig，所以需要放在配置文件的最后
//apply from: 'tinker.gradle'
